/*
 * Copyright (c) 2023 David Dunwoody.
 *
 * All rights reserved.
 */

use glfw::Key as GlfwKey;
use imgui::Key;

pub fn to_imgui_key(key: GlfwKey) -> Option<Key> {
    match key {
        GlfwKey::Tab => Some(Key::Tab),
        GlfwKey::Left => Some(Key::LeftArrow),
        GlfwKey::Right => Some(Key::RightArrow),
        GlfwKey::Up => Some(Key::UpArrow),
        GlfwKey::Down => Some(Key::DownArrow),
        GlfwKey::PageUp => Some(Key::PageUp),
        GlfwKey::PageDown => Some(Key::PageDown),
        GlfwKey::Home => Some(Key::Home),
        GlfwKey::End => Some(Key::End),
        GlfwKey::Insert => Some(Key::Insert),
        GlfwKey::Delete => Some(Key::Delete),
        GlfwKey::Backspace => Some(Key::Backspace),
        GlfwKey::Space => Some(Key::Space),
        GlfwKey::Enter => Some(Key::Enter),
        GlfwKey::Escape => Some(Key::Escape),

        GlfwKey::Num0 => Some(Key::Alpha0),
        GlfwKey::Num1 => Some(Key::Alpha1),
        GlfwKey::Num2 => Some(Key::Alpha2),
        GlfwKey::Num3 => Some(Key::Alpha3),
        GlfwKey::Num4 => Some(Key::Alpha4),
        GlfwKey::Num5 => Some(Key::Alpha5),
        GlfwKey::Num6 => Some(Key::Alpha6),
        GlfwKey::Num7 => Some(Key::Alpha7),
        GlfwKey::Num8 => Some(Key::Alpha8),
        GlfwKey::Num9 => Some(Key::Alpha9),

        GlfwKey::A => Some(Key::A),
        GlfwKey::B => Some(Key::B),
        GlfwKey::C => Some(Key::C),
        GlfwKey::D => Some(Key::D),
        GlfwKey::E => Some(Key::E),
        GlfwKey::F => Some(Key::F),
        GlfwKey::G => Some(Key::G),
        GlfwKey::H => Some(Key::H),
        GlfwKey::I => Some(Key::I),
        GlfwKey::J => Some(Key::J),
        GlfwKey::K => Some(Key::K),
        GlfwKey::L => Some(Key::L),
        GlfwKey::M => Some(Key::M),
        GlfwKey::N => Some(Key::N),
        GlfwKey::O => Some(Key::O),
        GlfwKey::P => Some(Key::P),
        GlfwKey::Q => Some(Key::Q),
        GlfwKey::R => Some(Key::R),
        GlfwKey::S => Some(Key::S),
        GlfwKey::T => Some(Key::T),
        GlfwKey::U => Some(Key::U),
        GlfwKey::V => Some(Key::V),
        GlfwKey::W => Some(Key::W),
        GlfwKey::X => Some(Key::X),
        GlfwKey::Y => Some(Key::Y),
        GlfwKey::Z => Some(Key::Z),

        GlfwKey::F1 => Some(Key::F1),
        GlfwKey::F2 => Some(Key::F2),
        GlfwKey::F3 => Some(Key::F3),
        GlfwKey::F4 => Some(Key::F4),
        GlfwKey::F5 => Some(Key::F5),
        GlfwKey::F6 => Some(Key::F6),
        GlfwKey::F7 => Some(Key::F7),
        GlfwKey::F8 => Some(Key::F8),
        GlfwKey::F9 => Some(Key::F9),
        GlfwKey::F10 => Some(Key::F10),
        GlfwKey::F11 => Some(Key::F11),
        GlfwKey::F12 => Some(Key::F12),

        GlfwKey::Apostrophe => Some(Key::Apostrophe),
        GlfwKey::Comma => Some(Key::Comma),
        GlfwKey::Minus => Some(Key::Minus),
        GlfwKey::Period => Some(Key::Period),
        GlfwKey::Slash => Some(Key::Slash),
        GlfwKey::Semicolon => Some(Key::Semicolon),
        GlfwKey::Equal => Some(Key::Equal),
        GlfwKey::LeftBracket => Some(Key::LeftBracket),
        GlfwKey::Backslash => Some(Key::Backslash),
        GlfwKey::RightBracket => Some(Key::RightBracket),
        GlfwKey::GraveAccent => Some(Key::GraveAccent),

        GlfwKey::Kp0 => Some(Key::Keypad0),
        GlfwKey::Kp1 => Some(Key::Keypad1),
        GlfwKey::Kp2 => Some(Key::Keypad2),
        GlfwKey::Kp3 => Some(Key::Keypad3),
        GlfwKey::Kp4 => Some(Key::Keypad4),
        GlfwKey::Kp5 => Some(Key::Keypad5),
        GlfwKey::Kp6 => Some(Key::Keypad6),
        GlfwKey::Kp7 => Some(Key::Keypad7),
        GlfwKey::Kp8 => Some(Key::Keypad8),
        GlfwKey::Kp9 => Some(Key::Keypad9),

        GlfwKey::KpDecimal => Some(Key::KeypadDecimal),
        GlfwKey::KpDivide => Some(Key::KeypadDivide),
        GlfwKey::KpMultiply => Some(Key::KeypadMultiply),
        GlfwKey::KpSubtract => Some(Key::KeypadSubtract),
        GlfwKey::KpAdd => Some(Key::KeypadAdd),
        GlfwKey::KpEnter => Some(Key::KeypadEnter),
        GlfwKey::KpEqual => Some(Key::KeypadEqual),
        _ => None,
    }
}
